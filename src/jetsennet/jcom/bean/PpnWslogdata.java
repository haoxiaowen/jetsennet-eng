/*
 * Copyright 2010-2016 the original author or authors.
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 文件：jetsennet.ppn.bean.PpnWslogdata.java
 * 日 期：Mon May 11 17:53:17 CST 2015
 */
package jetsennet.jcom.bean;

import java.io.Serializable;
import org.uorm.orm.annotation.ClassMapping;
import org.uorm.orm.annotation.FieldMapping;

/**
 *
 * this file is generated by the uorm pojo tools.
 *
 * @author <a href="mailto:xunchangguo@gmail.com">郭训常</a>
 * @version 1.0.0
 */
@ClassMapping(tableName = "PPN_WSLOGDATA", keyGenerator = "uuid")
public class PpnWslogdata implements Serializable {
	
	private static final long serialVersionUID = 1L;
	
	public static String PROP_WSLOG_ID = "WSLOG_ID";
	public static String PROP_WSLOG_REQUESTDATA = "WSLOG_REQUESTDATA";
	public static String PROP_WSLOG_RESPONSEDATA = "WSLOG_RESPONSEDATA";
	
	/** primary key field of wslogId */
	@FieldMapping(columnName = "WSLOG_ID", columnType = 12, primary = true)
	private String wslogId;
	@FieldMapping(columnName = "WSLOG_REQUESTDATA", columnType = 12)
	private String wslogRequestdata;
	@FieldMapping(columnName = "WSLOG_RESPONSEDATA", columnType = 12)
	private String wslogResponsedata;
	
	public PpnWslogdata() {
		super();
	}

	/*public PpnWslogdata(String wslogId) {
		this.wslogId = wslogId;
	}*/

	public PpnWslogdata(String wslogRequestdata) {
		this.wslogRequestdata = wslogRequestdata;
	}

	/**
	 * @return the wslogId
	 */
	public String getWslogId() {
		return this.wslogId;
	}
	
	/**
	 * @param wslogId the wslogId to set
	 */
	public void setWslogId(String value) {
		this.wslogId = value;
	}

	/**
	 * @return the wslogRequestdata
	 */
	public String getWslogRequestdata() {
		return this.wslogRequestdata;
	}
	
	/**
	 * @param wslogRequestdata the wslogRequestdata to set
	 */
	public void setWslogRequestdata(String value) {
		this.wslogRequestdata = value;
	}

	/**
	 * @return the wslogResponsedata
	 */
	public String getWslogResponsedata() {
		return this.wslogResponsedata;
	}
	
	/**
	 * @param wslogResponsedata the wslogResponsedata to set
	 */
	public void setWslogResponsedata(String value) {
		this.wslogResponsedata = value;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object o) {
		if ((o == null) || !(o instanceof PpnWslogdata)) {
			return false;
		}
		PpnWslogdata other = (PpnWslogdata)o;
		if (null == this.wslogId) {
			if (other.wslogId != null)
				return false;
		} else if (!this.wslogId.equals(other.wslogId))
			return false;
		return true;
	}
	
	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((wslogId == null) ? 0 : wslogId.hashCode());
		return result;
	}
	
}