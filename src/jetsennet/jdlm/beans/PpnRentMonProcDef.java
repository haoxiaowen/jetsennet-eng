/*
 * Copyright 2010-2016 the original author or authors.
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 文件：jetsennet.jdlm.beans.PpnRentMonProcDef.java
 * 日 期：Thu Jan 05 17:05:18 CST 2017
 */
package jetsennet.jdlm.beans;

import java.io.Serializable;
import org.uorm.orm.annotation.ClassMapping;
import org.uorm.orm.annotation.FieldMapping;

/**
 *
 * this file is generated by the uorm pojo tools.
 *
 * @author <a href="mailto:xunchangguo@gmail.com">郭训常</a>
 * @version 1.0.0
 */
@ClassMapping(tableName = "PPN_RENT_MON_PROC_DEF", keyGenerator = "uuid")
public class PpnRentMonProcDef implements Serializable {
	
	private static final long serialVersionUID = 1L;
	
	public static String PROP_OBJ_TYPE_ID = "OBJ_TYPE_ID";
	public static String PROP_PROC_CODE = "PROC_CODE";
	public static String PROP_PROC_ID = "PROC_ID";
	public static String PROP_PROC_INDEX = "PROC_INDEX";
	public static String PROP_PROC_NAME = "PROC_NAME";
	public static String PROP_PROC_STATUS = "PROC_STATUS";
	
	/** primary key field of procId */
	@FieldMapping(columnName = "PROC_ID", columnType = 12, primary = true)
	private String procId;
	/** foreign key field of PPN_RENT_OBJ_TYPE.OBJ_TYPE_ID */
	@FieldMapping(columnName = "OBJ_TYPE_ID", columnType = 12)
	private String objTypeId;
	@FieldMapping(columnName = "PROC_CODE", columnType = 12)
	private String procCode;
	@FieldMapping(columnName = "PROC_INDEX", columnType = 2)
	private Integer procIndex;
	@FieldMapping(columnName = "PROC_NAME", columnType = 12)
	private String procName;
	@FieldMapping(columnName = "PROC_STATUS", columnType = 12)
	private String procStatus;
	
	public PpnRentMonProcDef() {
		super();
	}

	public PpnRentMonProcDef(String procId) {
		this.procId = procId;
	}

	/**
	 * @return the objTypeId
	 */
	public String getObjTypeId() {
		return this.objTypeId;
	}
	
	/**
	 * @param objTypeId the objTypeId to set
	 */
	public void setObjTypeId(String value) {
		this.objTypeId = value;
	}

	/**
	 * @return the procCode
	 */
	public String getProcCode() {
		return this.procCode;
	}
	
	/**
	 * @param procCode the procCode to set
	 */
	public void setProcCode(String value) {
		this.procCode = value;
	}

	/**
	 * @return the procId
	 */
	public String getProcId() {
		return this.procId;
	}
	
	/**
	 * @param procId the procId to set
	 */
	public void setProcId(String value) {
		this.procId = value;
	}

	/**
	 * @return the procIndex
	 */
	public Integer getProcIndex() {
		return this.procIndex;
	}
	
	/**
	 * @param procIndex the procIndex to set
	 */
	public void setProcIndex(Integer value) {
		this.procIndex = value;
	}

	/**
	 * @return the procName
	 */
	public String getProcName() {
		return this.procName;
	}
	
	/**
	 * @param procName the procName to set
	 */
	public void setProcName(String value) {
		this.procName = value;
	}

	/**
	 * @return the procStatus
	 */
	public String getProcStatus() {
		return this.procStatus;
	}
	
	/**
	 * @param procStatus the procStatus to set
	 */
	public void setProcStatus(String value) {
		this.procStatus = value;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object o) {
		if ((o == null) || !(o instanceof PpnRentMonProcDef)) {
			return false;
		}
		PpnRentMonProcDef other = (PpnRentMonProcDef)o;
		if (null == this.procId) {
			if (other.procId != null)
				return false;
		} else if (!this.procId.equals(other.procId))
			return false;
		return true;
	}
	
	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((procId == null) ? 0 : procId.hashCode());
		return result;
	}
	
}