/*
 * Copyright 2010-2016 the original author or authors.
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 文件：jetsennet.jue2.beans.PpnTask.java
 * 日 期：Thu Aug 04 19:12:54 CST 2016
 */
package jetsennet.jue2.beans;

import java.io.Serializable;
import java.util.Date;
import org.uorm.orm.annotation.ClassMapping;
import org.uorm.orm.annotation.FieldMapping;

/**
 *
 * this file is generated by the uorm pojo tools.
 *
 * @author <a href="mailto:xunchangguo@gmail.com">郭训常</a>
 * @version 1.0.0
 */
@ClassMapping(tableName = "PPN_TASK", keyGenerator = "uuid")
public class PpnTask implements Serializable {
	
	private static final long serialVersionUID = 1L;
	
	public static String PROP_ESB_ITEM_NO = "ESB_ITEM_NO";
	public static String PROP_ESB_PRODTASK_CODE = "ESB_PRODTASK_CODE";
	public static String PROP_PGM_ID = "PGM_ID";
	public static String PROP_TASK_CODE = "TASK_CODE";
	public static String PROP_TASK_CREATE_SYS = "TASK_CREATE_SYS";
	public static String PROP_TASK_CREATE_TIME = "TASK_CREATE_TIME";
	public static String PROP_TASK_CREATE_TYPE = "TASK_CREATE_TYPE";
	public static String PROP_TASK_CREATE_USER = "TASK_CREATE_USER";
	public static String PROP_TASK_DESC = "TASK_DESC";
	public static String PROP_TASK_EXEC_DESC = "TASK_EXEC_DESC";
	public static String PROP_TASK_EXEC_STATUS = "TASK_EXEC_STATUS";
	public static String PROP_TASK_FIELD1 = "TASK_FIELD1";
	public static String PROP_TASK_FIELD2 = "TASK_FIELD2";
	public static String PROP_TASK_FLOW_NUMBER = "TASK_FLOW_NUMBER";
	public static String PROP_TASK_ID = "TASK_ID";
	public static String PROP_TASK_MANAGER = "TASK_MANAGER";
	public static String PROP_TASK_NAME = "TASK_NAME";
	public static String PROP_TASK_PLAN_END_TIME = "TASK_PLAN_END_TIME";
	public static String PROP_TASK_PLAN_START_TIME = "TASK_PLAN_START_TIME";
	public static String PROP_TASK_PRIORITY = "TASK_PRIORITY";
	public static String PROP_TASK_TYPE = "TASK_TYPE";
	
	/** primary key field of taskId */
	@FieldMapping(columnName = "TASK_ID", columnType = 12, primary = true)
	private String taskId;
	@FieldMapping(columnName = "ESB_ITEM_NO", columnType = 12)
	private String esbItemNo;
	@FieldMapping(columnName = "ESB_PRODTASK_CODE", columnType = 12)
	private String esbProdtaskCode;
	/** foreign key field of PPN_PGM_PROGRAM.PGM_ID */
	@FieldMapping(columnName = "PGM_ID", columnType = 12)
	private String pgmId;
	@FieldMapping(columnName = "TASK_CODE", columnType = 12)
	private String taskCode;
	@FieldMapping(columnName = "TASK_CREATE_SYS", columnType = 12)
	private String taskCreateSys;
	@FieldMapping(columnName = "TASK_CREATE_TIME", columnType = 93)
	private Date taskCreateTime;
	@FieldMapping(columnName = "TASK_CREATE_TYPE", columnType = 2)
	private Integer taskCreateType;
	@FieldMapping(columnName = "TASK_CREATE_USER", columnType = 12)
	private String taskCreateUser;
	@FieldMapping(columnName = "TASK_DESC", columnType = 12)
	private String taskDesc;
	@FieldMapping(columnName = "TASK_EXEC_DESC", columnType = 12)
	private String taskExecDesc;
	@FieldMapping(columnName = "TASK_EXEC_STATUS", columnType = 2)
	private Integer taskExecStatus;
	@FieldMapping(columnName = "TASK_FIELD1", columnType = 12)
	private String taskField1;
	@FieldMapping(columnName = "TASK_FIELD2", columnType = 12)
	private String taskField2;
	@FieldMapping(columnName = "TASK_FLOW_NUMBER", columnType = 2)
	private Integer taskFlowNumber;
	@FieldMapping(columnName = "TASK_MANAGER", columnType = 12)
	private String taskManager;
	@FieldMapping(columnName = "TASK_NAME", columnType = 12)
	private String taskName;
	@FieldMapping(columnName = "TASK_PLAN_END_TIME", columnType = 93)
	private Date taskPlanEndTime;
	@FieldMapping(columnName = "TASK_PLAN_START_TIME", columnType = 93)
	private Date taskPlanStartTime;
	@FieldMapping(columnName = "TASK_PRIORITY", columnType = 2)
	private Integer taskPriority;
	@FieldMapping(columnName = "TASK_TYPE", columnType = 2)
	private Integer taskType;
	
	public PpnTask() {
		super();
	}

	public PpnTask(String taskId) {
		this.taskId = taskId;
	}

	public PpnTask(String taskCode, Date taskCreateTime, Integer taskExecStatus, String taskName, Integer taskType) {
		this.taskCode = taskCode;
		this.taskCreateTime = taskCreateTime;
		this.taskExecStatus = taskExecStatus;
		this.taskName = taskName;
		this.taskType = taskType;
	}

	/**
	 * @return the esbItemNo
	 */
	public String getEsbItemNo() {
		return this.esbItemNo;
	}
	
	/**
	 * @param esbItemNo the esbItemNo to set
	 */
	public void setEsbItemNo(String value) {
		this.esbItemNo = value;
	}

	/**
	 * @return the esbProdtaskCode
	 */
	public String getEsbProdtaskCode() {
		return this.esbProdtaskCode;
	}
	
	/**
	 * @param esbProdtaskCode the esbProdtaskCode to set
	 */
	public void setEsbProdtaskCode(String value) {
		this.esbProdtaskCode = value;
	}

	/**
	 * @return the pgmId
	 */
	public String getPgmId() {
		return this.pgmId;
	}
	
	/**
	 * @param pgmId the pgmId to set
	 */
	public void setPgmId(String value) {
		this.pgmId = value;
	}

	/**
	 * @return the taskCode
	 */
	public String getTaskCode() {
		return this.taskCode;
	}
	
	/**
	 * @param taskCode the taskCode to set
	 */
	public void setTaskCode(String value) {
		this.taskCode = value;
	}

	/**
	 * @return the taskCreateSys
	 */
	public String getTaskCreateSys() {
		return this.taskCreateSys;
	}
	
	/**
	 * @param taskCreateSys the taskCreateSys to set
	 */
	public void setTaskCreateSys(String value) {
		this.taskCreateSys = value;
	}

	/**
	 * @return the taskCreateTime
	 */
	public Date getTaskCreateTime() {
		return this.taskCreateTime;
	}
	
	/**
	 * @param taskCreateTime the taskCreateTime to set
	 */
	public void setTaskCreateTime(Date value) {
		this.taskCreateTime = value;
	}

	/**
	 * @return the taskCreateType
	 */
	public Integer getTaskCreateType() {
		return this.taskCreateType;
	}
	
	/**
	 * @param taskCreateType the taskCreateType to set
	 */
	public void setTaskCreateType(Integer value) {
		this.taskCreateType = value;
	}

	/**
	 * @return the taskCreateUser
	 */
	public String getTaskCreateUser() {
		return this.taskCreateUser;
	}
	
	/**
	 * @param taskCreateUser the taskCreateUser to set
	 */
	public void setTaskCreateUser(String value) {
		this.taskCreateUser = value;
	}

	/**
	 * @return the taskDesc
	 */
	public String getTaskDesc() {
		return this.taskDesc;
	}
	
	/**
	 * @param taskDesc the taskDesc to set
	 */
	public void setTaskDesc(String value) {
		this.taskDesc = value;
	}

	/**
	 * @return the taskExecDesc
	 */
	public String getTaskExecDesc() {
		return this.taskExecDesc;
	}
	
	/**
	 * @param taskExecDesc the taskExecDesc to set
	 */
	public void setTaskExecDesc(String value) {
		this.taskExecDesc = value;
	}

	/**
	 * @return the taskExecStatus
	 */
	public Integer getTaskExecStatus() {
		return this.taskExecStatus;
	}
	
	/**
	 * @param taskExecStatus the taskExecStatus to set
	 */
	public void setTaskExecStatus(Integer value) {
		this.taskExecStatus = value;
	}

	/**
	 * @return the taskField1
	 */
	public String getTaskField1() {
		return this.taskField1;
	}
	
	/**
	 * @param taskField1 the taskField1 to set
	 */
	public void setTaskField1(String value) {
		this.taskField1 = value;
	}

	/**
	 * @return the taskField2
	 */
	public String getTaskField2() {
		return this.taskField2;
	}
	
	/**
	 * @param taskField2 the taskField2 to set
	 */
	public void setTaskField2(String value) {
		this.taskField2 = value;
	}

	/**
	 * @return the taskFlowNumber
	 */
	public Integer getTaskFlowNumber() {
		return this.taskFlowNumber;
	}
	
	/**
	 * @param taskFlowNumber the taskFlowNumber to set
	 */
	public void setTaskFlowNumber(Integer value) {
		this.taskFlowNumber = value;
	}

	/**
	 * @return the taskId
	 */
	public String getTaskId() {
		return this.taskId;
	}
	
	/**
	 * @param taskId the taskId to set
	 */
	public void setTaskId(String value) {
		this.taskId = value;
	}

	/**
	 * @return the taskManager
	 */
	public String getTaskManager() {
		return this.taskManager;
	}
	
	/**
	 * @param taskManager the taskManager to set
	 */
	public void setTaskManager(String value) {
		this.taskManager = value;
	}

	/**
	 * @return the taskName
	 */
	public String getTaskName() {
		return this.taskName;
	}
	
	/**
	 * @param taskName the taskName to set
	 */
	public void setTaskName(String value) {
		this.taskName = value;
	}

	/**
	 * @return the taskPlanEndTime
	 */
	public Date getTaskPlanEndTime() {
		return this.taskPlanEndTime;
	}
	
	/**
	 * @param taskPlanEndTime the taskPlanEndTime to set
	 */
	public void setTaskPlanEndTime(Date value) {
		this.taskPlanEndTime = value;
	}

	/**
	 * @return the taskPlanStartTime
	 */
	public Date getTaskPlanStartTime() {
		return this.taskPlanStartTime;
	}
	
	/**
	 * @param taskPlanStartTime the taskPlanStartTime to set
	 */
	public void setTaskPlanStartTime(Date value) {
		this.taskPlanStartTime = value;
	}

	/**
	 * @return the taskPriority
	 */
	public Integer getTaskPriority() {
		return this.taskPriority;
	}
	
	/**
	 * @param taskPriority the taskPriority to set
	 */
	public void setTaskPriority(Integer value) {
		this.taskPriority = value;
	}

	/**
	 * @return the taskType
	 */
	public Integer getTaskType() {
		return this.taskType;
	}
	
	/**
	 * @param taskType the taskType to set
	 */
	public void setTaskType(Integer value) {
		this.taskType = value;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object o) {
		if ((o == null) || !(o instanceof PpnTask)) {
			return false;
		}
		PpnTask other = (PpnTask)o;
		if (null == this.taskId) {
			if (other.taskId != null)
				return false;
		} else if (!this.taskId.equals(other.taskId))
			return false;
		return true;
	}
	
	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((taskId == null) ? 0 : taskId.hashCode());
		return result;
	}
	
}