/*
 * Copyright 2010-2016 the original author or authors.
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 文件：jetsennet.jue2.bean.PpnBcItemCtrl.java
 * 日 期：Fri Jul 22 11:11:28 CST 2016
 */
package jetsennet.jue2.beans;

import java.io.Serializable;
import org.uorm.orm.annotation.ClassMapping;
import org.uorm.orm.annotation.FieldMapping;

/**
 *
 * this file is generated by the uorm pojo tools.
 *
 * @author <a href="mailto:xunchangguo@gmail.com">郭训常</a>
 * @version 1.0.0
 */
@ClassMapping(tableName = "PPN_BC_ITEM_CTRL", keyGenerator = "uuid")
public class PpnBcItemCtrl implements Serializable {
	
	private static final long serialVersionUID = 1L;
	
	public static String PROP_BREAK_FLAG = "BREAK_FLAG";
	public static String PROP_BREAK_POINT_CODE = "BREAK_POINT_CODE";
	public static String PROP_CTRL_FIELD1 = "CTRL_FIELD1";
	public static String PROP_CTRL_FIELD2 = "CTRL_FIELD2";
	public static String PROP_CTRL_ID = "CTRL_ID";
	public static String PROP_EVENT_TYPE = "EVENT_TYPE";
	public static String PROP_INSERT_TIME = "INSERT_TIME";
	public static String PROP_IP_TYPE = "IP_TYPE";
	public static String PROP_IS_LIVE = "IS_LIVE";
	public static String PROP_MARK_IN = "MARK_IN";
	public static String PROP_PLAN_MATCH_FLAG = "PLAN_MATCH_FLAG";
	public static String PROP_STUDIO_CODE = "STUDIO_CODE";
	public static String PROP_STUDIO_NAME = "STUDIO_NAME";
	public static String PROP_THROUGH_TYPE = "THROUGH_TYPE";
	public static String PROP_TRANS_TAPE = "TRANS_TAPE";
	
	/** primary key field of ctrlId */
	@FieldMapping(columnName = "CTRL_ID", columnType = 12, primary = true)
	private String ctrlId;
	@FieldMapping(columnName = "BREAK_FLAG", columnType = 2)
	private Integer breakFlag;
	@FieldMapping(columnName = "BREAK_POINT_CODE", columnType = 12)
	private String breakPointCode;
	@FieldMapping(columnName = "CTRL_FIELD1", columnType = 12)
	private String ctrlField1;
	@FieldMapping(columnName = "CTRL_FIELD2", columnType = 12)
	private String ctrlField2;
	@FieldMapping(columnName = "EVENT_TYPE", columnType = 2)
	private Integer eventType;
	@FieldMapping(columnName = "INSERT_TIME", columnType = 12)
	private String insertTime;
	@FieldMapping(columnName = "IP_TYPE", columnType = 2)
	private Integer ipType;
	@FieldMapping(columnName = "IS_LIVE", columnType = 2)
	private Integer isLive;
	@FieldMapping(columnName = "MARK_IN", columnType = 12)
	private String markIn;
	@FieldMapping(columnName = "PLAN_MATCH_FLAG", columnType = 2)
	private Integer planMatchFlag;
	@FieldMapping(columnName = "STUDIO_CODE", columnType = 12)
	private String studioCode;
	@FieldMapping(columnName = "STUDIO_NAME", columnType = 12)
	private String studioName;
	@FieldMapping(columnName = "THROUGH_TYPE", columnType = 2)
	private Integer throughType;
	@FieldMapping(columnName = "TRANS_TAPE", columnType = 2)
	private Integer transTape;
	
	public PpnBcItemCtrl() {
		super();
	}

	public PpnBcItemCtrl(String ctrlId) {
		this.ctrlId = ctrlId;
	}

	public PpnBcItemCtrl(Integer isLive) {
		this.isLive = isLive;
	}

	/**
	 * @return the breakFlag
	 */
	public Integer getBreakFlag() {
		return this.breakFlag;
	}
	
	/**
	 * @param breakFlag the breakFlag to set
	 */
	public void setBreakFlag(Integer value) {
		this.breakFlag = value;
	}

	/**
	 * @return the breakPointCode
	 */
	public String getBreakPointCode() {
		return this.breakPointCode;
	}
	
	/**
	 * @param breakPointCode the breakPointCode to set
	 */
	public void setBreakPointCode(String value) {
		this.breakPointCode = value;
	}

	/**
	 * @return the ctrlField1
	 */
	public String getCtrlField1() {
		return this.ctrlField1;
	}
	
	/**
	 * @param ctrlField1 the ctrlField1 to set
	 */
	public void setCtrlField1(String value) {
		this.ctrlField1 = value;
	}

	/**
	 * @return the ctrlField2
	 */
	public String getCtrlField2() {
		return this.ctrlField2;
	}
	
	/**
	 * @param ctrlField2 the ctrlField2 to set
	 */
	public void setCtrlField2(String value) {
		this.ctrlField2 = value;
	}

	/**
	 * @return the ctrlId
	 */
	public String getCtrlId() {
		return this.ctrlId;
	}
	
	/**
	 * @param ctrlId the ctrlId to set
	 */
	public void setCtrlId(String value) {
		this.ctrlId = value;
	}

	/**
	 * @return the eventType
	 */
	public Integer getEventType() {
		return this.eventType;
	}
	
	/**
	 * @param eventType the eventType to set
	 */
	public void setEventType(Integer value) {
		this.eventType = value;
	}

	/**
	 * @return the insertTime
	 */
	public String getInsertTime() {
		return this.insertTime;
	}
	
	/**
	 * @param insertTime the insertTime to set
	 */
	public void setInsertTime(String value) {
		this.insertTime = value;
	}

	/**
	 * @return the ipType
	 */
	public Integer getIpType() {
		return this.ipType;
	}
	
	/**
	 * @param ipType the ipType to set
	 */
	public void setIpType(Integer value) {
		this.ipType = value;
	}

	/**
	 * @return the isLive
	 */
	public Integer getIsLive() {
		return this.isLive;
	}
	
	/**
	 * @param isLive the isLive to set
	 */
	public void setIsLive(Integer value) {
		this.isLive = value;
	}

	/**
	 * @return the markIn
	 */
	public String getMarkIn() {
		return this.markIn;
	}
	
	/**
	 * @param markIn the markIn to set
	 */
	public void setMarkIn(String value) {
		this.markIn = value;
	}

	/**
	 * @return the planMatchFlag
	 */
	public Integer getPlanMatchFlag() {
		return this.planMatchFlag;
	}
	
	/**
	 * @param planMatchFlag the planMatchFlag to set
	 */
	public void setPlanMatchFlag(Integer value) {
		this.planMatchFlag = value;
	}

	/**
	 * @return the studioCode
	 */
	public String getStudioCode() {
		return this.studioCode;
	}
	
	/**
	 * @param studioCode the studioCode to set
	 */
	public void setStudioCode(String value) {
		this.studioCode = value;
	}

	/**
	 * @return the studioName
	 */
	public String getStudioName() {
		return this.studioName;
	}
	
	/**
	 * @param studioName the studioName to set
	 */
	public void setStudioName(String value) {
		this.studioName = value;
	}

	/**
	 * @return the throughType
	 */
	public Integer getThroughType() {
		return this.throughType;
	}
	
	/**
	 * @param throughType the throughType to set
	 */
	public void setThroughType(Integer value) {
		this.throughType = value;
	}

	/**
	 * @return the transTape
	 */
	public Integer getTransTape() {
		return this.transTape;
	}
	
	/**
	 * @param transTape the transTape to set
	 */
	public void setTransTape(Integer value) {
		this.transTape = value;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object o) {
		if ((o == null) || !(o instanceof PpnBcItemCtrl)) {
			return false;
		}
		PpnBcItemCtrl other = (PpnBcItemCtrl)o;
		if (null == this.ctrlId) {
			if (other.ctrlId != null)
				return false;
		} else if (!this.ctrlId.equals(other.ctrlId))
			return false;
		return true;
	}
	
	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((ctrlId == null) ? 0 : ctrlId.hashCode());
		return result;
	}
	
}