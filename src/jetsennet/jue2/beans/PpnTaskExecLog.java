/*
 * Copyright 2010-2016 the original author or authors.
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 文件：jetsennet.ppn.bean.PpnTaskExecLog.java
 * 日 期：Fri Jul 29 10:10:02 CST 2016
 */
package jetsennet.jue2.beans;

import java.io.Serializable;
import java.util.Date;
import org.uorm.orm.annotation.ClassMapping;
import org.uorm.orm.annotation.FieldMapping;

/**
 *
 * this file is generated by the uorm pojo tools.
 *
 * @author <a href="mailto:xunchangguo@gmail.com">郭训常</a>
 * @version 1.0.0
 */
@ClassMapping(tableName = "PPN_TASK_EXEC_LOG", keyGenerator = "uuid")
public class PpnTaskExecLog implements Serializable {
	
	private static final long serialVersionUID = 1L;
	
	public static String PROP_EXEC_DESC = "EXEC_DESC";
	public static String PROP_EXEC_FIELD1 = "EXEC_FIELD1";
	public static String PROP_EXEC_FIELD2 = "EXEC_FIELD2";
	public static String PROP_EXEC_ID = "EXEC_ID";
	public static String PROP_EXEC_TIME = "EXEC_TIME";
	public static String PROP_EXEC_TYPE = "EXEC_TYPE";
	public static String PROP_EXEC_USER = "EXEC_USER";
	public static String PROP_TASK_ID = "TASK_ID";
	
	/** primary key field of execId */
	@FieldMapping(columnName = "EXEC_ID", columnType = 12, primary = true)
	private String execId;
	@FieldMapping(columnName = "EXEC_DESC", columnType = 12)
	private String execDesc;
	@FieldMapping(columnName = "EXEC_FIELD1", columnType = 12)
	private String execField1;
	@FieldMapping(columnName = "EXEC_FIELD2", columnType = 12)
	private String execField2;
	@FieldMapping(columnName = "EXEC_TIME", columnType = 93)
	private Date execTime;
	@FieldMapping(columnName = "EXEC_TYPE", columnType = 2)
	private Integer execType;
	@FieldMapping(columnName = "EXEC_USER", columnType = 12)
	private String execUser;
	/** foreign key field of PPN_TASK.TASK_ID */
	@FieldMapping(columnName = "TASK_ID", columnType = 12)
	private String taskId;
	
	public PpnTaskExecLog() {
		super();
	}

	public PpnTaskExecLog(String execId) {
		this.execId = execId;
	}

	public PpnTaskExecLog(String execDesc, Date execTime, String execUser) {
		this.execDesc = execDesc;
		this.execTime = execTime;
		this.execUser = execUser;
	}

	/**
	 * @return the execDesc
	 */
	public String getExecDesc() {
		return this.execDesc;
	}
	
	/**
	 * @param execDesc the execDesc to set
	 */
	public void setExecDesc(String value) {
		this.execDesc = value;
	}

	/**
	 * @return the execField1
	 */
	public String getExecField1() {
		return this.execField1;
	}
	
	/**
	 * @param execField1 the execField1 to set
	 */
	public void setExecField1(String value) {
		this.execField1 = value;
	}

	/**
	 * @return the execField2
	 */
	public String getExecField2() {
		return this.execField2;
	}
	
	/**
	 * @param execField2 the execField2 to set
	 */
	public void setExecField2(String value) {
		this.execField2 = value;
	}

	/**
	 * @return the execId
	 */
	public String getExecId() {
		return this.execId;
	}
	
	/**
	 * @param execId the execId to set
	 */
	public void setExecId(String value) {
		this.execId = value;
	}

	/**
	 * @return the execTime
	 */
	public Date getExecTime() {
		return this.execTime;
	}
	
	/**
	 * @param execTime the execTime to set
	 */
	public void setExecTime(Date value) {
		this.execTime = value;
	}

	/**
	 * @return the execType
	 */
	public Integer getExecType() {
		return this.execType;
	}
	
	/**
	 * @param execType the execType to set
	 */
	public void setExecType(Integer value) {
		this.execType = value;
	}

	/**
	 * @return the execUser
	 */
	public String getExecUser() {
		return this.execUser;
	}
	
	/**
	 * @param execUser the execUser to set
	 */
	public void setExecUser(String value) {
		this.execUser = value;
	}

	/**
	 * @return the taskId
	 */
	public String getTaskId() {
		return this.taskId;
	}
	
	/**
	 * @param taskId the taskId to set
	 */
	public void setTaskId(String value) {
		this.taskId = value;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object o) {
		if ((o == null) || !(o instanceof PpnTaskExecLog)) {
			return false;
		}
		PpnTaskExecLog other = (PpnTaskExecLog)o;
		if (null == this.execId) {
			if (other.execId != null)
				return false;
		} else if (!this.execId.equals(other.execId))
			return false;
		return true;
	}
	
	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((execId == null) ? 0 : execId.hashCode());
		return result;
	}
	
}