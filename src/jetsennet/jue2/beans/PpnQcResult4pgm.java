/*
 * Copyright 2010-2016 the original author or authors.
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 文件：jetsennet.a4k.bean.PpnQcResult4pgm.java
 * 日 期：Tue Nov 10 17:54:52 CST 2015
 */
package jetsennet.jue2.beans;

import java.io.Serializable;
import java.sql.Timestamp;
import org.uorm.orm.annotation.ClassMapping;
import org.uorm.orm.annotation.FieldMapping;

/**
 *
 * this file is generated by the uorm pojo tools.
 *
 * @author <a href="mailto:xunchangguo@gmail.com">郭训常</a>
 * @version 1.0.0
 */
@ClassMapping(tableName = "PPN_QC_RESULT4PGM", keyGenerator = "uuid")
public class PpnQcResult4pgm implements Serializable {
	
	private static final long serialVersionUID = 1L;
	
	public static String PROP_PGM_ID = "PGM_ID";
	public static String PROP_QC_CREATETIME = "QC_CREATETIME";
	public static String PROP_QC_FIELD1 = "QC_FIELD1";
	public static String PROP_QC_FIELD2 = "QC_FIELD2";
	public static String PROP_QC_RESULT = "QC_RESULT";
	public static String PROP_QC_RESULTDESC = "QC_RESULTDESC";
	public static String PROP_QC_USERCODE = "QC_USERCODE";
	public static String PROP_QC_USERNAME = "QC_USERNAME";
	public static String PROP_R4P_ID = "R4P_ID";
	public static String PROP_SEG_INDEX = "SEG_INDEX";
	
	/** primary key field of r4pId */
	@FieldMapping(columnName = "R4P_ID", columnType = 12, primary = true)
	private String r4pId;
	/** foreign key field of PPN_TRANS_PGM_PROGRAM.PGM_ID */
	@FieldMapping(columnName = "PGM_ID", columnType = 12)
	private String pgmId;
	@FieldMapping(columnName = "QC_CREATETIME", columnType = 93)
	private Timestamp qcCreatetime;
	@FieldMapping(columnName = "QC_FIELD1", columnType = 12)
	private String qcField1;
	@FieldMapping(columnName = "QC_FIELD2", columnType = 12)
	private String qcField2;
	@FieldMapping(columnName = "QC_RESULT", columnType = 12)
	private String qcResult;
	@FieldMapping(columnName = "QC_RESULTDESC", columnType = 12)
	private String qcResultdesc;
	@FieldMapping(columnName = "QC_USERCODE", columnType = 12)
	private String qcUsercode;
	@FieldMapping(columnName = "QC_USERNAME", columnType = 12)
	private String qcUsername;
	@FieldMapping(columnName = "SEG_INDEX", columnType = 2)
	private Integer segIndex;
	
	public PpnQcResult4pgm() {
		super();
	}

	public PpnQcResult4pgm(String r4pId) {
		this.r4pId = r4pId;
	}

	public PpnQcResult4pgm(String pgmId, Timestamp qcCreatetime, String qcResult, String qcUsercode, String qcUsername, Integer segIndex) {
		this.pgmId = pgmId;
		this.qcCreatetime = qcCreatetime;
		this.qcResult = qcResult;
		this.qcUsercode = qcUsercode;
		this.qcUsername = qcUsername;
		this.segIndex = segIndex;
	}

	/**
	 * @return the pgmId
	 */
	public String getPgmId() {
		return this.pgmId;
	}
	
	/**
	 * @param pgmId the pgmId to set
	 */
	public void setPgmId(String value) {
		this.pgmId = value;
	}

	/**
	 * @return the qcCreatetime
	 */
	public Timestamp getQcCreatetime() {
		return this.qcCreatetime;
	}
	
	/**
	 * @param qcCreatetime the qcCreatetime to set
	 */
	public void setQcCreatetime(Timestamp value) {
		this.qcCreatetime = value;
	}

	/**
	 * @return the qcField1
	 */
	public String getQcField1() {
		return this.qcField1;
	}
	
	/**
	 * @param qcField1 the qcField1 to set
	 */
	public void setQcField1(String value) {
		this.qcField1 = value;
	}

	/**
	 * @return the qcField2
	 */
	public String getQcField2() {
		return this.qcField2;
	}
	
	/**
	 * @param qcField2 the qcField2 to set
	 */
	public void setQcField2(String value) {
		this.qcField2 = value;
	}

	/**
	 * @return the qcResult
	 */
	public String getQcResult() {
		return this.qcResult;
	}
	
	/**
	 * @param qcResult the qcResult to set
	 */
	public void setQcResult(String value) {
		this.qcResult = value;
	}

	/**
	 * @return the qcResultdesc
	 */
	public String getQcResultdesc() {
		return this.qcResultdesc;
	}
	
	/**
	 * @param qcResultdesc the qcResultdesc to set
	 */
	public void setQcResultdesc(String value) {
		this.qcResultdesc = value;
	}

	/**
	 * @return the qcUsercode
	 */
	public String getQcUsercode() {
		return this.qcUsercode;
	}
	
	/**
	 * @param qcUsercode the qcUsercode to set
	 */
	public void setQcUsercode(String value) {
		this.qcUsercode = value;
	}

	/**
	 * @return the qcUsername
	 */
	public String getQcUsername() {
		return this.qcUsername;
	}
	
	/**
	 * @param qcUsername the qcUsername to set
	 */
	public void setQcUsername(String value) {
		this.qcUsername = value;
	}

	/**
	 * @return the r4pId
	 */
	public String getR4pId() {
		return this.r4pId;
	}
	
	/**
	 * @param r4pId the r4pId to set
	 */
	public void setR4pId(String value) {
		this.r4pId = value;
	}

	/**
	 * @return the segIndex
	 */
	public Integer getSegIndex() {
		return this.segIndex;
	}
	
	/**
	 * @param segIndex the segIndex to set
	 */
	public void setSegIndex(Integer value) {
		this.segIndex = value;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object o) {
		if ((o == null) || !(o instanceof PpnQcResult4pgm)) {
			return false;
		}
		PpnQcResult4pgm other = (PpnQcResult4pgm)o;
		if (null == this.r4pId) {
			if (other.r4pId != null)
				return false;
		} else if (!this.r4pId.equals(other.r4pId))
			return false;
		return true;
	}
	
	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((r4pId == null) ? 0 : r4pId.hashCode());
		return result;
	}
	
}