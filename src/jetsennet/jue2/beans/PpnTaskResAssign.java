/*
 * Copyright 2010-2016 the original author or authors.
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 文件：jetsennet.jue2.beans.PpnTaskResAssign.java
 * 日 期：Thu Aug 04 14:46:59 CST 2016
 */
package jetsennet.jue2.beans;

import java.io.Serializable;
import org.uorm.orm.annotation.ClassMapping;
import org.uorm.orm.annotation.FieldMapping;

/**
 *
 * this file is generated by the uorm pojo tools.
 *
 * @author <a href="mailto:xunchangguo@gmail.com">郭训常</a>
 * @version 1.0.0
 */
@ClassMapping(tableName = "PPN_TASK_RES_ASSIGN", keyGenerator = "uuid")
public class PpnTaskResAssign implements Serializable {
	
	private static final long serialVersionUID = 1L;
	
	public static String PROP_ASSIGN_ID = "ASSIGN_ID";
	public static String PROP_TASK_ASSIGN_ID = "TASK_ASSIGN_ID";
	public static String PROP_TASK_ID = "TASK_ID";
	
	/** primary key field of taskAssignId */
	@FieldMapping(columnName = "TASK_ASSIGN_ID", columnType = 12, primary = true)
	private String taskAssignId;
	/** foreign key field of PPN_RES_ASSIGNMENT.ASSIGN_ID */
	@FieldMapping(columnName = "ASSIGN_ID", columnType = 12)
	private String assignId;
	/** foreign key field of PPN_TASK.TASK_ID */
	@FieldMapping(columnName = "TASK_ID", columnType = 12)
	private String taskId;
	
	public PpnTaskResAssign() {
		super();
	}

	public PpnTaskResAssign(String taskAssignId) {
		this.taskAssignId = taskAssignId;
	}

	/**
	 * @return the assignId
	 */
	public String getAssignId() {
		return this.assignId;
	}
	
	/**
	 * @param assignId the assignId to set
	 */
	public void setAssignId(String value) {
		this.assignId = value;
	}

	/**
	 * @return the taskAssignId
	 */
	public String getTaskAssignId() {
		return this.taskAssignId;
	}
	
	/**
	 * @param taskAssignId the taskAssignId to set
	 */
	public void setTaskAssignId(String value) {
		this.taskAssignId = value;
	}

	/**
	 * @return the taskId
	 */
	public String getTaskId() {
		return this.taskId;
	}
	
	/**
	 * @param taskId the taskId to set
	 */
	public void setTaskId(String value) {
		this.taskId = value;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object o) {
		if ((o == null) || !(o instanceof PpnTaskResAssign)) {
			return false;
		}
		PpnTaskResAssign other = (PpnTaskResAssign)o;
		if (null == this.taskAssignId) {
			if (other.taskAssignId != null)
				return false;
		} else if (!this.taskAssignId.equals(other.taskAssignId))
			return false;
		return true;
	}
	
	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((taskAssignId == null) ? 0 : taskAssignId.hashCode());
		return result;
	}
	
}