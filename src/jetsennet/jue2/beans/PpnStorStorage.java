/*
 * Copyright 2010-2016 the original author or authors.
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 文件：jetsennet.jue2.trm.bean.PpnStorStorage.java
 * 日 期：Mon Aug 01 20:02:23 CST 2016
 */
package jetsennet.jue2.beans;

import java.io.Serializable;
import java.util.Date;
import org.uorm.orm.annotation.ClassMapping;
import org.uorm.orm.annotation.FieldMapping;

/**
 *
 * this file is generated by the uorm pojo tools.
 *
 * @author <a href="mailto:xunchangguo@gmail.com">郭训常</a>
 * @version 1.0.0
 */
@ClassMapping(tableName = "PPN_STOR_STORAGE", keyGenerator = "uuid")
public class PpnStorStorage implements Serializable {
	
	private static final long serialVersionUID = 1L;
	
	public static String PROP_STOR_CAPACITY = "STOR_CAPACITY";
	public static String PROP_STOR_CREATE_TIME = "STOR_CREATE_TIME";
	public static String PROP_STOR_CREATE_USER = "STOR_CREATE_USER";
	public static String PROP_STOR_DESC = "STOR_DESC";
	public static String PROP_STOR_FIELD1 = "STOR_FIELD1";
	public static String PROP_STOR_FIELD2 = "STOR_FIELD2";
	public static String PROP_STOR_HOST = "STOR_HOST";
	public static String PROP_STOR_ID = "STOR_ID";
	public static String PROP_STOR_NAME = "STOR_NAME";
	public static String PROP_STOR_SHARE_NAME = "STOR_SHARE_NAME";
	public static String PROP_STOR_SHARE_PATH = "STOR_SHARE_PATH";
	public static String PROP_STOR_STATUS = "STOR_STATUS";
	
	/** primary key field of storId */
	@FieldMapping(columnName = "STOR_ID", columnType = 12, primary = true)
	private String storId;
	@FieldMapping(columnName = "STOR_CAPACITY", columnType = 2)
	private Integer storCapacity;
	@FieldMapping(columnName = "STOR_CREATE_TIME", columnType = 93)
	private Date storCreateTime;
	@FieldMapping(columnName = "STOR_CREATE_USER", columnType = 12)
	private String storCreateUser;
	@FieldMapping(columnName = "STOR_DESC", columnType = 12)
	private String storDesc;
	@FieldMapping(columnName = "STOR_FIELD1", columnType = 12)
	private String storField1;
	@FieldMapping(columnName = "STOR_FIELD2", columnType = 12)
	private String storField2;
	@FieldMapping(columnName = "STOR_HOST", columnType = 12)
	private String storHost;
	@FieldMapping(columnName = "STOR_NAME", columnType = 12)
	private String storName;
	@FieldMapping(columnName = "STOR_SHARE_NAME", columnType = 12)
	private String storShareName;
	@FieldMapping(columnName = "STOR_SHARE_PATH", columnType = 12)
	private String storSharePath;
	@FieldMapping(columnName = "STOR_STATUS", columnType = 2)
	private Integer storStatus;
	
	public PpnStorStorage() {
		super();
	}

	public PpnStorStorage(String storId) {
		this.storId = storId;
	}

	/**
	 * @return the storCapacity
	 */
	public Integer getStorCapacity() {
		return this.storCapacity;
	}
	
	/**
	 * @param storCapacity the storCapacity to set
	 */
	public void setStorCapacity(Integer value) {
		this.storCapacity = value;
	}

	/**
	 * @return the storCreateTime
	 */
	public Date getStorCreateTime() {
		return this.storCreateTime;
	}
	
	/**
	 * @param storCreateTime the storCreateTime to set
	 */
	public void setStorCreateTime(Date value) {
		this.storCreateTime = value;
	}

	/**
	 * @return the storCreateUser
	 */
	public String getStorCreateUser() {
		return this.storCreateUser;
	}
	
	/**
	 * @param storCreateUser the storCreateUser to set
	 */
	public void setStorCreateUser(String value) {
		this.storCreateUser = value;
	}

	/**
	 * @return the storDesc
	 */
	public String getStorDesc() {
		return this.storDesc;
	}
	
	/**
	 * @param storDesc the storDesc to set
	 */
	public void setStorDesc(String value) {
		this.storDesc = value;
	}

	/**
	 * @return the storField1
	 */
	public String getStorField1() {
		return this.storField1;
	}
	
	/**
	 * @param storField1 the storField1 to set
	 */
	public void setStorField1(String value) {
		this.storField1 = value;
	}

	/**
	 * @return the storField2
	 */
	public String getStorField2() {
		return this.storField2;
	}
	
	/**
	 * @param storField2 the storField2 to set
	 */
	public void setStorField2(String value) {
		this.storField2 = value;
	}

	/**
	 * @return the storHost
	 */
	public String getStorHost() {
		return this.storHost;
	}
	
	/**
	 * @param storHost the storHost to set
	 */
	public void setStorHost(String value) {
		this.storHost = value;
	}

	/**
	 * @return the storId
	 */
	public String getStorId() {
		return this.storId;
	}
	
	/**
	 * @param storId the storId to set
	 */
	public void setStorId(String value) {
		this.storId = value;
	}

	/**
	 * @return the storName
	 */
	public String getStorName() {
		return this.storName;
	}
	
	/**
	 * @param storName the storName to set
	 */
	public void setStorName(String value) {
		this.storName = value;
	}

	/**
	 * @return the storShareName
	 */
	public String getStorShareName() {
		return this.storShareName;
	}
	
	/**
	 * @param storShareName the storShareName to set
	 */
	public void setStorShareName(String value) {
		this.storShareName = value;
	}

	/**
	 * @return the storSharePath
	 */
	public String getStorSharePath() {
		return this.storSharePath;
	}
	
	/**
	 * @param storSharePath the storSharePath to set
	 */
	public void setStorSharePath(String value) {
		this.storSharePath = value;
	}

	/**
	 * @return the storStatus
	 */
	public Integer getStorStatus() {
		return this.storStatus;
	}
	
	/**
	 * @param storStatus the storStatus to set
	 */
	public void setStorStatus(Integer value) {
		this.storStatus = value;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object o) {
		if ((o == null) || !(o instanceof PpnStorStorage)) {
			return false;
		}
		PpnStorStorage other = (PpnStorStorage)o;
		if (null == this.storId) {
			if (other.storId != null)
				return false;
		} else if (!this.storId.equals(other.storId))
			return false;
		return true;
	}
	
	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((storId == null) ? 0 : storId.hashCode());
		return result;
	}
	
}