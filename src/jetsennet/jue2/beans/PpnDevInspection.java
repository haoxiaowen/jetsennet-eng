/*
 * Copyright 2010-2016 the original author or authors.
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 文件：jetsennet.jue2.beans.PpnDevInspection.java
 * 日 期：Fri Sep 23 10:26:07 CST 2016
 */
package jetsennet.jue2.beans;

import java.io.Serializable;
import java.util.Date;
import org.uorm.orm.annotation.ClassMapping;
import org.uorm.orm.annotation.FieldMapping;

/**
 *
 * this file is generated by the uorm pojo tools.
 *
 * @author <a href="mailto:xunchangguo@gmail.com">郭训常</a>
 * @version 1.0.0
 */
@ClassMapping(tableName = "PPN_DEV_INSPECTION", keyGenerator = "uuid")
public class PpnDevInspection implements Serializable {
	
	private static final long serialVersionUID = 1L;
	
	public static String PROP_DEV_ID = "DEV_ID";
	public static String PROP_INSP_DESC = "INSP_DESC";
	public static String PROP_INSP_FIELD1 = "INSP_FIELD1";
	public static String PROP_INSP_FIELD2 = "INSP_FIELD2";
	public static String PROP_INSP_ID = "INSP_ID";
	public static String PROP_INSP_STATUS = "INSP_STATUS";
	public static String PROP_INSP_TIME = "INSP_TIME";
	public static String PROP_INSP_TYPE = "INSP_TYPE";
	public static String PROP_INSP_USER = "INSP_USER";
	
	/** primary key field of inspId */
	@FieldMapping(columnName = "INSP_ID", columnType = 12, primary = true)
	private String inspId;
	/** foreign key field of PPN_DEV_DEVICE.DEV_ID */
	@FieldMapping(columnName = "DEV_ID", columnType = 12)
	private String devId;
	@FieldMapping(columnName = "INSP_DESC", columnType = 12)
	private String inspDesc;
	@FieldMapping(columnName = "INSP_FIELD1", columnType = 12)
	private String inspField1;
	@FieldMapping(columnName = "INSP_FIELD2", columnType = 12)
	private String inspField2;
	@FieldMapping(columnName = "INSP_STATUS", columnType = 2)
	private Integer inspStatus;
	@FieldMapping(columnName = "INSP_TIME", columnType = 93)
	private Date inspTime;
	@FieldMapping(columnName = "INSP_TYPE", columnType = 2)
	private Integer inspType;
	@FieldMapping(columnName = "INSP_USER", columnType = 12)
	private String inspUser;
	
	public PpnDevInspection() {
		super();
	}

	public PpnDevInspection(String inspId) {
		this.inspId = inspId;
	}

	public PpnDevInspection(String devId, String inspDesc, Integer inspStatus, Date inspTime, Integer inspType, String inspUser) {
		this.devId = devId;
		this.inspDesc = inspDesc;
		this.inspStatus = inspStatus;
		this.inspTime = inspTime;
		this.inspType = inspType;
		this.inspUser = inspUser;
	}

	/**
	 * @return the devId
	 */
	public String getDevId() {
		return this.devId;
	}
	
	/**
	 * @param devId the devId to set
	 */
	public void setDevId(String value) {
		this.devId = value;
	}

	/**
	 * @return the inspDesc
	 */
	public String getInspDesc() {
		return this.inspDesc;
	}
	
	/**
	 * @param inspDesc the inspDesc to set
	 */
	public void setInspDesc(String value) {
		this.inspDesc = value;
	}

	/**
	 * @return the inspField1
	 */
	public String getInspField1() {
		return this.inspField1;
	}
	
	/**
	 * @param inspField1 the inspField1 to set
	 */
	public void setInspField1(String value) {
		this.inspField1 = value;
	}

	/**
	 * @return the inspField2
	 */
	public String getInspField2() {
		return this.inspField2;
	}
	
	/**
	 * @param inspField2 the inspField2 to set
	 */
	public void setInspField2(String value) {
		this.inspField2 = value;
	}

	/**
	 * @return the inspId
	 */
	public String getInspId() {
		return this.inspId;
	}
	
	/**
	 * @param inspId the inspId to set
	 */
	public void setInspId(String value) {
		this.inspId = value;
	}

	/**
	 * @return the inspStatus
	 */
	public Integer getInspStatus() {
		return this.inspStatus;
	}
	
	/**
	 * @param inspStatus the inspStatus to set
	 */
	public void setInspStatus(Integer value) {
		this.inspStatus = value;
	}

	/**
	 * @return the inspTime
	 */
	public Date getInspTime() {
		return this.inspTime;
	}
	
	/**
	 * @param inspTime the inspTime to set
	 */
	public void setInspTime(Date value) {
		this.inspTime = value;
	}

	/**
	 * @return the inspType
	 */
	public Integer getInspType() {
		return this.inspType;
	}
	
	/**
	 * @param inspType the inspType to set
	 */
	public void setInspType(Integer value) {
		this.inspType = value;
	}

	/**
	 * @return the inspUser
	 */
	public String getInspUser() {
		return this.inspUser;
	}
	
	/**
	 * @param inspUser the inspUser to set
	 */
	public void setInspUser(String value) {
		this.inspUser = value;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object o) {
		if ((o == null) || !(o instanceof PpnDevInspection)) {
			return false;
		}
		PpnDevInspection other = (PpnDevInspection)o;
		if (null == this.inspId) {
			if (other.inspId != null)
				return false;
		} else if (!this.inspId.equals(other.inspId))
			return false;
		return true;
	}
	
	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((inspId == null) ? 0 : inspId.hashCode());
		return result;
	}
	
}