/*
 * Copyright 2010-2016 the original author or authors.
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 文件：jetsennet.jue2.trm.bean.PpnTaskFileCataScene.java
 * 日 期：Sat Jul 30 11:35:23 CST 2016
 */
package jetsennet.jue2.beans;

import java.io.Serializable;
import org.uorm.orm.annotation.ClassMapping;
import org.uorm.orm.annotation.FieldMapping;

/**
 *
 * this file is generated by the uorm pojo tools.
 *
 * @author <a href="mailto:xunchangguo@gmail.com">郭训常</a>
 * @version 1.0.0
 */
@ClassMapping(tableName = "PPN_TASK_FILE_CATA_SCENE", keyGenerator = "uuid")
public class PpnTaskFileCataScene implements Serializable {
	
	private static final long serialVersionUID = 1L;
	
	public static String PROP_CLIP_CATA_ID = "CLIP_CATA_ID";
	public static String PROP_SCENE_DESC = "SCENE_DESC";
	public static String PROP_SCENE_END_POINT = "SCENE_END_POINT";
	public static String PROP_SCENE_ID = "SCENE_ID";
	public static String PROP_SCENE_START_POINT = "SCENE_START_POINT";
	
	/** primary key field of sceneId */
	@FieldMapping(columnName = "SCENE_ID", columnType = 12, primary = true)
	private String sceneId;
	/** foreign key field of PPN_TASK_FILE_CATA.CATA_ID */
	@FieldMapping(columnName = "CLIP_CATA_ID", columnType = 12)
	private String clipCataId;
	@FieldMapping(columnName = "SCENE_DESC", columnType = 12)
	private String sceneDesc;
	@FieldMapping(columnName = "SCENE_END_POINT", columnType = 12)
	private String sceneEndPoint;
	@FieldMapping(columnName = "SCENE_START_POINT", columnType = 12)
	private String sceneStartPoint;
	
	public PpnTaskFileCataScene() {
		super();
	}

	public PpnTaskFileCataScene(String sceneId) {
		this.sceneId = sceneId;
	}

	/**
	 * @return the clipCataId
	 */
	public String getClipCataId() {
		return this.clipCataId;
	}
	
	/**
	 * @param clipCataId the clipCataId to set
	 */
	public void setClipCataId(String value) {
		this.clipCataId = value;
	}

	/**
	 * @return the sceneDesc
	 */
	public String getSceneDesc() {
		return this.sceneDesc;
	}
	
	/**
	 * @param sceneDesc the sceneDesc to set
	 */
	public void setSceneDesc(String value) {
		this.sceneDesc = value;
	}

	/**
	 * @return the sceneEndPoint
	 */
	public String getSceneEndPoint() {
		return this.sceneEndPoint;
	}
	
	/**
	 * @param sceneEndPoint the sceneEndPoint to set
	 */
	public void setSceneEndPoint(String value) {
		this.sceneEndPoint = value;
	}

	/**
	 * @return the sceneId
	 */
	public String getSceneId() {
		return this.sceneId;
	}
	
	/**
	 * @param sceneId the sceneId to set
	 */
	public void setSceneId(String value) {
		this.sceneId = value;
	}

	/**
	 * @return the sceneStartPoint
	 */
	public String getSceneStartPoint() {
		return this.sceneStartPoint;
	}
	
	/**
	 * @param sceneStartPoint the sceneStartPoint to set
	 */
	public void setSceneStartPoint(String value) {
		this.sceneStartPoint = value;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object o) {
		if ((o == null) || !(o instanceof PpnTaskFileCataScene)) {
			return false;
		}
		PpnTaskFileCataScene other = (PpnTaskFileCataScene)o;
		if (null == this.sceneId) {
			if (other.sceneId != null)
				return false;
		} else if (!this.sceneId.equals(other.sceneId))
			return false;
		return true;
	}
	
	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((sceneId == null) ? 0 : sceneId.hashCode());
		return result;
	}
	
}