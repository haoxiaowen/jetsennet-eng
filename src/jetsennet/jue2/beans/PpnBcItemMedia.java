/*
 * Copyright 2010-2016 the original author or authors.
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 文件：jetsennet.jue2.bean.PpnBcItemMedia.java
 * 日 期：Fri Jul 22 10:04:12 CST 2016
 */
package jetsennet.jue2.beans;

import java.io.Serializable;

import org.uorm.orm.annotation.ClassMapping;
import org.uorm.orm.annotation.FieldMapping;

/**
 *
 * this file is generated by the uorm pojo tools.
 *
 * @author <a href="mailto:xunchangguo@gmail.com">郭训常</a>
 * @version 1.0.0
 */
@ClassMapping(tableName = "PPN_BC_ITEM_MEDIA", keyGenerator = "uuid")
public class PpnBcItemMedia implements Serializable {
	
	private static final long serialVersionUID = 1L;
	
	public static String PROP_MEDIA_CODE = "MEDIA_CODE";
	public static String PROP_MEDIA_DESC = "MEDIA_DESC";
	public static String PROP_MEDIA_FIELD1 = "MEDIA_FIELD1";
	public static String PROP_MEDIA_FIELD2 = "MEDIA_FIELD2";
	public static String PROP_MEDIA_FILE_NAME = "MEDIA_FILE_NAME";
	public static String PROP_MEDIA_ID = "MEDIA_ID";
	public static String PROP_MEDIA_SEG_INDEX = "MEDIA_SEG_INDEX";
	public static String PROP_MEDIA_TRIM_IN = "MEDIA_TRIM_IN";
	
	/** primary key field of mediaId */
	@FieldMapping(columnName = "MEDIA_ID", columnType = 12, primary = true)
	private String mediaId;
	@FieldMapping(columnName = "MEDIA_CODE", columnType = 12)
	private String mediaCode;
	@FieldMapping(columnName = "MEDIA_DESC", columnType = 12)
	private String mediaDesc;
	@FieldMapping(columnName = "MEDIA_FIELD1", columnType = 12)
	private String mediaField1;
	@FieldMapping(columnName = "MEDIA_FIELD2", columnType = 12)
	private String mediaField2;
	@FieldMapping(columnName = "MEDIA_FILE_NAME", columnType = 12)
	private String mediaFileName;
	@FieldMapping(columnName = "MEDIA_SEG_INDEX", columnType = 12)
	private String mediaSegIndex;
	@FieldMapping(columnName = "MEDIA_TRIM_IN", columnType = 12)
	private String mediaTrimIn;
	
	public PpnBcItemMedia() {
		super();
	}

	public PpnBcItemMedia(String mediaId) {
		this.mediaId = mediaId;
	}

	public PpnBcItemMedia(String mediaCode, String mediaFileName, String mediaSegIndex) {
		this.mediaCode = mediaCode;
		this.mediaFileName = mediaFileName;
		this.mediaSegIndex = mediaSegIndex;
	}

	/**
	 * @return the mediaCode
	 */
	public String getMediaCode() {
		return this.mediaCode;
	}
	
	/**
	 * @param mediaCode the mediaCode to set
	 */
	public void setMediaCode(String value) {
		this.mediaCode = value;
	}

	/**
	 * @return the mediaDesc
	 */
	public String getMediaDesc() {
		return this.mediaDesc;
	}
	
	/**
	 * @param mediaDesc the mediaDesc to set
	 */
	public void setMediaDesc(String value) {
		this.mediaDesc = value;
	}

	/**
	 * @return the mediaField1
	 */
	public String getMediaField1() {
		return this.mediaField1;
	}
	
	/**
	 * @param mediaField1 the mediaField1 to set
	 */
	public void setMediaField1(String value) {
		this.mediaField1 = value;
	}

	/**
	 * @return the mediaField2
	 */
	public String getMediaField2() {
		return this.mediaField2;
	}
	
	/**
	 * @param mediaField2 the mediaField2 to set
	 */
	public void setMediaField2(String value) {
		this.mediaField2 = value;
	}

	/**
	 * @return the mediaFileName
	 */
	public String getMediaFileName() {
		return this.mediaFileName;
	}
	
	/**
	 * @param mediaFileName the mediaFileName to set
	 */
	public void setMediaFileName(String value) {
		this.mediaFileName = value;
	}

	/**
	 * @return the mediaId
	 */
	public String getMediaId() {
		return this.mediaId;
	}
	
	/**
	 * @param mediaId the mediaId to set
	 */
	public void setMediaId(String value) {
		this.mediaId = value;
	}

	/**
	 * @return the mediaSegIndex
	 */
	public String getMediaSegIndex() {
		return this.mediaSegIndex;
	}
	
	/**
	 * @param mediaSegIndex the mediaSegIndex to set
	 */
	public void setMediaSegIndex(String value) {
		this.mediaSegIndex = value;
	}

	/**
	 * @return the mediaTrimIn
	 */
	public String getMediaTrimIn() {
		return this.mediaTrimIn;
	}
	
	/**
	 * @param mediaTrimIn the mediaTrimIn to set
	 */
	public void setMediaTrimIn(String value) {
		this.mediaTrimIn = value;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object o) {
		if ((o == null) || !(o instanceof PpnBcItemMedia)) {
			return false;
		}
		PpnBcItemMedia other = (PpnBcItemMedia)o;
		if (null == this.mediaId) {
			if (other.mediaId != null)
				return false;
		} else if (!this.mediaId.equals(other.mediaId))
			return false;
		return true;
	}
	
	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((mediaId == null) ? 0 : mediaId.hashCode());
		return result;
	}
	
}