/*
 * Copyright 2010-2016 the original author or authors.
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 文件：jetsennet.a4k.bean.PpnQcPgm2task.java
 * 日 期：Tue Nov 10 17:44:45 CST 2015
 */
package jetsennet.jue2.beans;

import java.io.Serializable;
import org.uorm.orm.annotation.ClassMapping;
import org.uorm.orm.annotation.FieldMapping;

/**
 *
 * this file is generated by the uorm pojo tools.
 *
 * @author <a href="mailto:xunchangguo@gmail.com">郭训常</a>
 * @version 1.0.0
 */
@ClassMapping(tableName = "PPN_QC_PGM2TASK", keyGenerator = "uuid")
public class PpnQcPgm2task implements Serializable {
	
	private static final long serialVersionUID = 1L;
	
	public static String PROP_P2Q_ID = "P2Q_ID";
	public static String PROP_PGM_ID = "PGM_ID";
	public static String PROP_SEG_NO = "SEG_NO";
	public static String PROP_TASK_ID = "TASK_ID";
	
	/** primary key field of p2qId */
	@FieldMapping(columnName = "P2Q_ID", columnType = 12, primary = true)
	private String p2qId;
	/** foreign key field of PPN_TRANS_PGM_PROGRAM.PGM_ID */
	@FieldMapping(columnName = "PGM_ID", columnType = 12)
	private String pgmId;
	@FieldMapping(columnName = "SEG_NO", columnType = 2)
	private Integer segNo;
	/** foreign key field of PPN_QC_TASK.TASK_ID */
	@FieldMapping(columnName = "TASK_ID", columnType = 12)
	private String taskId;
	
	public PpnQcPgm2task() {
		super();
	}

	public PpnQcPgm2task(String p2qId) {
		this.p2qId = p2qId;
	}

	public PpnQcPgm2task(String pgmId, Integer segNo, String taskId) {
		this.pgmId = pgmId;
		this.segNo = segNo;
		this.taskId = taskId;
	}

	/**
	 * @return the p2qId
	 */
	public String getP2qId() {
		return this.p2qId;
	}
	
	/**
	 * @param p2qId the p2qId to set
	 */
	public void setP2qId(String value) {
		this.p2qId = value;
	}

	/**
	 * @return the pgmId
	 */
	public String getPgmId() {
		return this.pgmId;
	}
	
	/**
	 * @param pgmId the pgmId to set
	 */
	public void setPgmId(String value) {
		this.pgmId = value;
	}

	/**
	 * @return the segNo
	 */
	public Integer getSegNo() {
		return this.segNo;
	}
	
	/**
	 * @param segNo the segNo to set
	 */
	public void setSegNo(Integer value) {
		this.segNo = value;
	}

	/**
	 * @return the taskId
	 */
	public String getTaskId() {
		return this.taskId;
	}
	
	/**
	 * @param taskId the taskId to set
	 */
	public void setTaskId(String value) {
		this.taskId = value;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object o) {
		if ((o == null) || !(o instanceof PpnQcPgm2task)) {
			return false;
		}
		PpnQcPgm2task other = (PpnQcPgm2task)o;
		if (null == this.p2qId) {
			if (other.p2qId != null)
				return false;
		} else if (!this.p2qId.equals(other.p2qId))
			return false;
		return true;
	}
	
	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((p2qId == null) ? 0 : p2qId.hashCode());
		return result;
	}
	
}