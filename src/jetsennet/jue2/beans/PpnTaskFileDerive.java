/*
 * Copyright 2010-2016 the original author or authors.
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 文件：jetsennet.ppn.bean.PpnTaskFileDerive.java
 * 日 期：Fri Jul 29 10:10:03 CST 2016
 */
package jetsennet.jue2.beans;

import java.io.Serializable;
import org.uorm.orm.annotation.ClassMapping;
import org.uorm.orm.annotation.FieldMapping;

/**
 *
 * this file is generated by the uorm pojo tools.
 *
 * @author <a href="mailto:xunchangguo@gmail.com">郭训常</a>
 * @version 1.0.0
 */
@ClassMapping(tableName = "PPN_TASK_FILE_DERIVE", keyGenerator = "uuid")
public class PpnTaskFileDerive implements Serializable {
	
	private static final long serialVersionUID = 1L;
	
	public static String PROP_DERIVE_DESC = "DERIVE_DESC";
	public static String PROP_DERIVE_FIELD1 = "DERIVE_FIELD1";
	public static String PROP_DERIVE_FIELD2 = "DERIVE_FIELD2";
	public static String PROP_DERIVE_FILES = "DERIVE_FILES";
	public static String PROP_DERIVE_SRC_FILE_IDS = "DERIVE_SRC_FILE_IDS";
	public static String PROP_DERIVE_TEMPLATE = "DERIVE_TEMPLATE";
	public static String PROP_DERIVE_TYPE = "DERIVE_TYPE";
	public static String PROP_DERIVE_WORKER = "DERIVE_WORKER";
	public static String PROP_FILE_ID = "FILE_ID";
	
	/**
	 * primary key field of fileId
	 * foreign key field of PPN_TASK_FILE.FILE_ID
	 */
	@FieldMapping(columnName = "FILE_ID", columnType = 12, primary = true)
	private String fileId;
	@FieldMapping(columnName = "DERIVE_DESC", columnType = 12)
	private String deriveDesc;
	@FieldMapping(columnName = "DERIVE_FIELD1", columnType = 12)
	private String deriveField1;
	@FieldMapping(columnName = "DERIVE_FIELD2", columnType = 12)
	private String deriveField2;
	@FieldMapping(columnName = "DERIVE_FILES", columnType = 12)
	private String deriveFiles;
	@FieldMapping(columnName = "DERIVE_SRC_FILE_IDS", columnType = 12)
	private String deriveSrcFileIds;
	@FieldMapping(columnName = "DERIVE_TEMPLATE", columnType = 12)
	private String deriveTemplate;
	@FieldMapping(columnName = "DERIVE_TYPE", columnType = 2)
	private Integer deriveType;
	@FieldMapping(columnName = "DERIVE_WORKER", columnType = 12)
	private String deriveWorker;
	
	public PpnTaskFileDerive() {
		super();
	}

	public PpnTaskFileDerive(String fileId) {
		this.fileId = fileId;
	}

	/**
	 * @return the deriveDesc
	 */
	public String getDeriveDesc() {
		return this.deriveDesc;
	}
	
	/**
	 * @param deriveDesc the deriveDesc to set
	 */
	public void setDeriveDesc(String value) {
		this.deriveDesc = value;
	}

	/**
	 * @return the deriveField1
	 */
	public String getDeriveField1() {
		return this.deriveField1;
	}
	
	/**
	 * @param deriveField1 the deriveField1 to set
	 */
	public void setDeriveField1(String value) {
		this.deriveField1 = value;
	}

	/**
	 * @return the deriveField2
	 */
	public String getDeriveField2() {
		return this.deriveField2;
	}
	
	/**
	 * @param deriveField2 the deriveField2 to set
	 */
	public void setDeriveField2(String value) {
		this.deriveField2 = value;
	}

	/**
	 * @return the deriveFiles
	 */
	public String getDeriveFiles() {
		return this.deriveFiles;
	}
	
	/**
	 * @param deriveFiles the deriveFiles to set
	 */
	public void setDeriveFiles(String value) {
		this.deriveFiles = value;
	}

	/**
	 * @return the deriveSrcFileIds
	 */
	public String getDeriveSrcFileIds() {
		return this.deriveSrcFileIds;
	}
	
	/**
	 * @param deriveSrcFileIds the deriveSrcFileIds to set
	 */
	public void setDeriveSrcFileIds(String value) {
		this.deriveSrcFileIds = value;
	}

	/**
	 * @return the deriveTemplate
	 */
	public String getDeriveTemplate() {
		return this.deriveTemplate;
	}
	
	/**
	 * @param deriveTemplate the deriveTemplate to set
	 */
	public void setDeriveTemplate(String value) {
		this.deriveTemplate = value;
	}

	/**
	 * @return the deriveType
	 */
	public Integer getDeriveType() {
		return this.deriveType;
	}
	
	/**
	 * @param deriveType the deriveType to set
	 */
	public void setDeriveType(Integer value) {
		this.deriveType = value;
	}

	/**
	 * @return the deriveWorker
	 */
	public String getDeriveWorker() {
		return this.deriveWorker;
	}
	
	/**
	 * @param deriveWorker the deriveWorker to set
	 */
	public void setDeriveWorker(String value) {
		this.deriveWorker = value;
	}

	/**
	 * @return the fileId
	 */
	public String getFileId() {
		return this.fileId;
	}
	
	/**
	 * @param fileId the fileId to set
	 */
	public void setFileId(String value) {
		this.fileId = value;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object o) {
		if ((o == null) || !(o instanceof PpnTaskFileDerive)) {
			return false;
		}
		PpnTaskFileDerive other = (PpnTaskFileDerive)o;
		if (null == this.fileId) {
			if (other.fileId != null)
				return false;
		} else if (!this.fileId.equals(other.fileId))
			return false;
		return true;
	}
	
	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((fileId == null) ? 0 : fileId.hashCode());
		return result;
	}
	
}